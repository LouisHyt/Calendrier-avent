[
    {
        "id": 1,
        "property": "array.filter()",
        "description": "La méthode <span class='accent'>array.filter()</span> en JavaScript crée un nouveau tableau contenant uniquement les éléments de l'array initial qui satisfont une condition définie par une fonction de test (callback). <br /> Elle ne modifie pas le tableau d'origine.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/:has", 
        "category": "JS",
        "example": [
            "const items = [10, 26, 2, 7, 11, 24];",
            "const filter = items.filter(item => item > 10);",
            "console.log(filter);"
        ]
    },

    {
        "id": 2,
        "property": "<template>",
        "description": "L'élément <span class='accent'> &lt;template&gt </span> est utilisé pour définir un morceau de code qui ne s'affiche pas directement sur la page et pouvant être utilisé en javascript. <br /> Il peut alors être cloné et inséré dans la page pour créer des composants dynamique ou générer du contenu répété.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/HTML/Element/template", 
        "category": "HTML",
        "example": [
            "<template id='cardTemplate'>",
            "   <div class='card'>",
            "       <h3 class='title'></h3>",
            "   </div>",
            "</template>",
            "",
            "<script>",
            "  const cardTemplate = document.querySelector('#cardTemplate');",
            "  const templateClone = cardTemplate.content.cloneNode(true);",
            "  const cardTitle = templateClone.querySelector('.title');",
            "",
            "  cardTitle.textContent = 'Mon titre';",
            "  document.body.appendChild(templateClone);",
            "</script>"
        ]
    },

    {
        "id": 3,
        "property": ":has",
        "description": "la pseudo-classe <span class='accent'>:has()</span> permet de cibler un élément parent en fonction de la présence de certains enfants ou descendants spécifiques. Elle agit comme un sélecteur de parent conditionnel",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/:has", 
        "category": "CSS",
        "example": [
            "<div class='card'>",
            "   <h1>Mon titre</h1>",
            "</div>",
            "<div class='card'>",
            "   <p>Texte</p>",
            "</div>",
            "",
            "<style>",
            "   .card:has(h1) {",
            "       background-color: limegreen",
            "   }",
            "</style>"
        ]
    },

    {
        "id": 4,
        "property": "clamp()",
        "description": "La fonction <span class='accent'>clamp()</span> permet de définir une valeur restant entre deux limites, le tout en s'adaptant dynamiquement à la taille de l'écran. <br /> Elle prend trois paramètres : <br /> • Une valeur minimale <br /> • Une valeur préférée/idéale <br /> • Une valeur maximale",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/clamp", 
        "category": "CSS",
        "example": [
            "font-size: clamp(50px, 2vw, 2rem);"
        ]
    },

    {
        "id": 5,
        "property": "<progress>",
        "description": "La balise <span class='accent'> &lt;progress&gt </span> est utilisée pour afficher une barre de progression, indiquant l'avancement d'une tâche. <br />Elle peut être utilisée pour montrer le statut d'un téléchargement ou d'un autre processus mesurable et peut être modifié dynamiquement en <span class='accent-secondary'>javascript</span>.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/HTML/Element/progress", 
        "category": "HTML",
        "example": [
            "<progress value='50' max='100'></progress>"
        ]
    },

    {
        "id": 6,
        "property": "Audio()",
        "description": "Le constructeur <span class='accent'> Audio </span> permet de créer un nouvel objet audio et permet la lecture de sons sur une page web.",
        "reference_link": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement/Audio", 
        "category": "JS",
        "example": [
            "const musique = new Audio('/assets/audios/musique.mp3');",
            "musique.volume = 0.7",
            "musique.play();"
        ]
    },

    {
        "id": 7,
        "property": ":nth-child()",
        "description": "la pseudo-classe <span class='accent'>:nth-child()</span> permet de sélectionner un ou plusieurs éléments selon leur position parmi leurs frères et sœurs dans le DOM. <br /> On peut spécifier un numéro ou une formule",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/:nth-child", 
        "category": "CSS",
        "example": [
            "li:nth-child(1) {",
            "   color: blue;",
            "}",
            "",
            "li:nth-child(2n) {",
            "   color: yellow;",
            "}"
        ]
    },

    {
        "id": 8,
        "property": "Déstructuration",
        "description": "La <span class='accent'>déstructuration</span> est une façon simple d'extraire des données d'objets ou de tableaux et de les assigner à des variables en une seule ligne. <br />Cela rend le code plus clair et concis.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment", 
        "category": "JS",
        "example": [
            "const personne = { nom: 'Louis', age: 26 };",
            "const { nom, age } = personne;",
            "",
            "const formatteurs = ['Mickaël', 'Stephane'];",
            "const [formatteur1, formatteur2] = formatteurs;"
        ]
    },

    {
        "id": 9,
        "property": "animate()",
        "description": "La fonction <span class='accent'>animate()</span> est utilisée pour créer des animations en Javascript sur des éléments HTML. <br /> Elle permet de définir des changements progressifs avec des propriétés <span class='accent-secondary'>CSS</span> (comme la position, la couleur, ou l'opacité).",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/API/Element/animate", 
        "category": "JS",
        "example": [
            "const box = document.querySelector('.box');",
            "",
            "box.animate([",
            "   { transform: 'translateY(0px) },",
            "   { transform: 'translateY(150px) }",
            "],{",
            "   duration: 1000,",
            "   iterations: 1",
            "});"
        ]
    },

    {
        "id": 10,
        "property": "animation-timeline",
        "description": "La proriété <span class='accent'>animation-timeline</span> est utilisée pour synchroniser une animation avec une évenement timeline comme scroll() ou view(). <br /> Cela permet de coordonner et de définir l'exécution d'animations plutôt que de démarrer simplement à un moment précis.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/animation-timeline", 
        "category": "CSS",
        "example": [ 
            ".box {",
            "   opacity: 0;",
            "   animation-name: fadeIn;",
            "   animation: fadeIn linear;",
            "   animation-timeline: scroll();",
            "}",
            "",
            "@keyframes fadeIn {",
            "   from {",
            "       opacity: 0;",
            "   }",
            "   to {",
            "       opacity: 1;",
            "   }",
            "}"
        ]
    },

    {
        "id": 11,
        "property": "<code>",
        "description": "La balise <span class='accent'>&lt;code&gt</span> est utilisée pour afficher du texte représentant du code informatique ou du code source. <br /> Le texte à l'intérieur est généralement rendu avec une police différente pour bien se distinguer du reste du contenu. Elle est idéale pour mettre en valeur des morceaux de code dans une page web.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/HTML/Element/code", 
        "category": "HTML",
        "example": [
            "<section class='code-example'>",
            "   <pre><code>",
            "       Let user = 'Louis';",
            "       user = user.toLowerCase();",
            "       console.log(user);",
            "   </code></pre>",
            "</section>"
        ]
    },

    {
        "id": 12,
        "property": "<select>",
        "description": "La balise <span class='accent'>&lt;select&gt</span> est utilisée pour créer une liste déroulante dans un formulaire. <br /> Elle permet à l'utilisateur de choisir une ou plusieurs options parmi une liste définie avec des balises <span class='accent-secondary'> &lt;option&gt; </span>",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/HTML/Element/select", 
        "category": "HTML",
        "example": [
            "<label for='situation'>Choisissez une option :</label>",
            "<select id='situation' name='situation'>",
            "   <option value='student'>Étudiant</option>",
            "   <option value='professional'>Professionnel</option>",
            "   <option value='other'>Autre</option>",
            "</select>"
        ]
    },

    {
        "id": 13,
        "property": "@container queries",
        "description": "La règle <span class='accent'>@container</span> permet d'appliquer des styles en fonction des dimensions ou propriétés d'un conteneur et non de la fenêtre (comme les media queries). <br /> Elle est utile pour créer des designs réactifs et relatifs à des éléments parents, plutôt que sur toute la page.",
        "reference_link": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_containment/Container_queries", 
        "category": "CSS",
        "example": [
            "section {",
            "   container-type: inline-size;",
            "}",
            "",
            "@container (min-width: 500px){",
            "   section > .card {",
            "       background-color: red;",
            "   }",
            "}"
        ]
    },

    {
        "id": 14,
        "property": "Opérateur conditionnel",
        "description": "<span class='accent'>L'opérateur conditionnel</span>, aussi appelé opérateur ternaire, permet de simplifier une condition if...else en une seule ligne. Il utilise le format suivant : <br /> condition ? valeurSiVrai : valeurSiFaux",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/Conditional_operator", 
        "category": "JS",
        "example": [
            "const user = {",
            "   age: 19",
            "   firstName: 'Francis',",
            "   lastName: 'Poirier'",
            "}",
            "",
            "const isAdult = user.age >= 18 ? true : false;",
            "console.log(isAdult);"
        ]
    },
    
    {
        "id": 15,
        "property": "::before & ::after",
        "description": "Les pseudo-éléments <span class='accent'>::before</span> et <span class='accent'>::after</span>  permettent d'ajouter du contenu avant ou après un élément, sans modifier le HTML. <br /> Ils sont souvent utilisés avec la propriété <span class='accent-secondary'>content</span> pour insérer du texte ou des éléments décoratifs.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/::before", 
        "category": "CSS",
        "example": [
            ".card {",
            "   width: 300px;",
            "   height: 220px;",
            "   position: relative;",
            "}",
            "",
            ".card::after {",
            "   content: 'New Product';",
            "   position: absolute;",
            "   top: 0;",
            "   right: 0;",
            "   background-color: lightblue;",
            "   padding: 1em;",
            "}"
        ]
    },

    {
        "id": 16,
        "property": "Attributs ARIA",
        "description": "Les <span class='accent'> attributs ARIA (Accessible Rich Internet Applications) </span> servent à améliorer l'accessibilité des sites web pour les personnes utilisant des technologies d'assistance comme les lecteurs d'écran. <br /> Ils décrivent le rôle, l'état, ou les propriétés des éléments, même si ces derniers ne sont pas naturellement accessibles.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/Accessibility/ARIA", 
        "category": "HTML",
        "example": [
            "<div role='radiogroup' aria-labelledby='drink-size' />",
            "   <h3 id='drink-size'> Taille de la boisson </h3>",
            "   <div role='radio' aria-checked='false' tabIndex='0'> Petit </div>",
            "   <div role='radio' aria-checked='false' tabIndex='1'> Moyen </div>",
            "   <div role='radio' aria-checked='false' tabIndex='2'> Grand </div>",
            "</div>"
        ]
    },

    {
        "id": 17,
        "property": "aspect-ratio",
        "description": "La propriété <span class='accent'> aspect-ratio </span> permet de définir un rapport largeur/hauteur pour un élément. <br /> Cela garantit que l'élément garde toujours la même proportion, peu importe la taille de son conteneur.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/aspect-ratio", 
        "category": "CSS",
        "example": [
            ".container {",
            "   width: 100%;",
            "   height: 800px;",
            "}",
            "",
            ".container > .card {",
            "   aspect-ratio: 5 / 4;",
            "   width: 50%;",
            "}"
        ]
    },

    {
        "id": 18,
        "property": "@view-transition & ::view-transition",
        "description": "La règle <span class='accent'>@view-transition</span> et le pseudo élément <span class='accent'>::view-transition</span> permettent de créer des animations fluides entre deux états d'une interface. <br /> Elles facilitent les transitions visuelles lorsque la disposition ou le contenu change. Par example, lorsqu'on passe d'une page à une autre.",
        "reference_link": "https://developer.mozilla.org/en-US/docs/Web/CSS/@view-transition", 
        "category": "CSS",
        "example": [
            "@view-transition {",
            "   navigation: auto;",
            "}",
            "",
            "::view-transition-old(root){",
            "   animation: 1s ease both move-out;",
            "}",
            "",
            "::view-transition-new(root){",
            "   animation: 1s ease both move-in;",
            "}"
        ]
    },
    {
        "id": 19,
        "property": "getComputedStyle()",
        "description": "La fonction <span class='accent'> getComputedStyle() </span> permet d'obtenir les styles appliqués à un élément, après le calcul par le navigateur. <br /> Elle retourne un objet contenant toutes les propriétés <span class='accent-secondary'>CSS</span> avec leurs valeurs.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/API/Window/getComputedStyle", 
        "category": "JS",
        "example": [
            "const element = document.querySelector('.element');",
            "const elementStyles = getComputedStyle(element)",
            "",
            "console.log('La couleur de l'élément est : ' + elementStyles.color);",
            "console.log('La largeur de l'élément est : ' + elementStyles.width);"
        ]
    },
    {
        "id": 20,
        "property": "mask",
        "description": "La propriété <span class='accent'> mask </span> permet de masquer certaines parties d'un élément en utilisant une image ou un dégradé. <br /> Les zones opaques du masque rendent l'élément visible, tandis que les zones transparentes le rendent invisible.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/mask", 
        "category": "CSS",
        "example": [
            ".card-1 {",
            "   mask: url('/mask.png');",
            "}",
            "",
            ".card-2 {",
            "   mask: linear-gradient(transparent 0%, white 10% 90%, transparent 100%);",
            "}"
        ]
    },
    {
        "id": 21,
        "property": "scrollIntoView()",
        "description": "La fonction <span class='accent'>scrollIntoView()</span> permet de faire défiler la page pour qu'un élément devienne visible dans la fenêtre d'affichage (viewport). Elle ajuste automatiquement la position de l'élément en fonction des options fournies.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/API/Element/scrollIntoView", 
        "category": "JS",
        "example": [
            "const element = document.querySelector('.element');",
            "element.scrollIntoView({",
            "   block: 'start',",
            "   behavior: 'smooth',",
            "   inline: 'nearest'",
            "});"
        ]
    },
    {
        "id": 22,
        "property": "@supports",
        "description": "La règle <span class='accent'>@supports</span> en CSS permet de vérifier si une propriété ou une fonctionnalité CSS est prise en charge par le navigateur, avant d'appliquer des styles spécifiques. <br /> Si le navigateur supporte la propriété ou la fonctionnalité testée, les styles à l'intérieur de la règle sont appliqués.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/CSS/@supports", 
        "category": "CSS",
        "example": [
            "@supports (interpolate-size: allow-keywords) {",
            "   :root {",
            "       interpolate-size: allow-keywords;",
            "   }",
            "",
            "   .element:hover {",
            "       height: auto;",
            "   }",
            "}"
        ]
    },
    {
        "id": 23,
        "property": "<fieldset>",
        "description": "La balise <span class='accent'>&lt;fieldset&gt</span> est utilisée pour regrouper plusieurs éléments d'un formulaire (comme des champs de saisie) afin de les organiser visuellement et structurellement. <br /> Elle est souvent accompagnée de la balise <span class='accent-secondary'>&lt;legend&gt;</span> qui ajoute un titre descriptif au groupe.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/HTML/Element/fieldset", 
        "category": "HTML",
        "example": [
            "<form>",
            "   <fieldset>",
            "       <legend>Informations personnelles</legend>",
            "       <label for='user_name'>Nom :</label>",
            "       <input type='text' id='user_name' name='user_name'>",
            "       <label for='user_mail'>Email :</label>",
            "       <input type='email' id='user_mail' name='user_mail'>",
            "   </fieldset>",
            "</form>"
        ]
    },

    {
        "id": 24,
        "property": "async / await",
        "description": "<span class='accent'>async</span> et <span class='accent'>await</span> sont des mots-clés utilisés pour gérer de façon simple et lisible les opérations asynchrones. <br /> En ajoutant <span class='accent'>async</span> devant une fonction, on indique que celle ci renverra toujours une <span class='accent-secondary'>promesse</span>. <span class='accent'>await</span> quand à lui, permet d'attendre qu'une<span class='accent-secondary'>promesse</span> soit résolue avant de continuer l'execution.",
        "reference_link": "https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Statements/async_function", 
        "category": "JS",
        "example": [
            "async function getData(){",
            "   const data = await fetch('https://api-example.com/data');",
            "   console.log(data);",
            "}",
            "",
            "getData();"
        ]
    }
    
]